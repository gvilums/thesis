# An example pipeline to be compiled for execution using UPMEM

[pipeline]
name = "combine_add"
# declares variables which are global for all executions
globals = [
    { name = "const_offset", type = "uint32_t" }
]
constants = [
    { name = "zero", type = "uint32_t", init = "0" },
]

[[stages]]
kind = "input"
inputs = [
    "uint32_t",
    "uint32_t"
]
output = "uint32_t[2]"
program = """
(*out_ptr)[0] = *in_ptr_0;
(*out_ptr)[1] = *in_ptr_1;
"""


[[stages]]
# this performs a map operation on the data
kind = "map"
output = "uint32_t" 
program = """
*out_ptr = (*in_ptr)[0] + (*in_ptr)[1] + const_offset;
""" 

[[stages]]
kind = "reduce"
identity = "zero"
output = "uint32_t"
program = """
*out_ptr += *in_ptr;
"""
combine = """
*out_ptr += *in_ptr;
"""